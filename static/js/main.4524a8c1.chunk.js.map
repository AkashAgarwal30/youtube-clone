{"version":3,"sources":["assets/images/logo.jpg","store/actions/index.js","store/actions/video.js","containers/SideBar/SideBarItem/SideBarItem.js","containers/SideBar/SideBarHeader/SideBarHeader.js","containers/SideBar/Subscriptions/Subscription/Subscription.js","containers/SideBar/Subscriptions/Subscriptions.js","containers/SideBar/SideBarFooter/SideBarFooter.js","containers/SideBar/SideBar.js","components/VideoGrid/VideoGridHeader/VideoGridHeader.js","services/number/number-format.js","services/date/date-format.js","components/VideoPreview/VideoPreview.js","components/VideoGrid/VideoGrid.js","store/api/youtube-api-response-types.js","store/actions/watch.js","services/url/index.js","store/reducers/videos.js","components/InfiniteScroll/InfiniteScroll.js","containers/Home/HomeContent/HomeContent.js","store/actions/api.js","store/reducers/api.js","containers/Home/Home.js","containers/HeaderNav/HeaderNav.js","components/ScrollToTop/ScrollToTop.js","components/AppLayout/AppLayout.js","components/Video/Video.js","components/Rating/Rating.js","components/VideoMetadata/VideoMetadata.js","components/VideoInfoBox/VideoInfoBox.js","containers/Comments/CommentsHeader/CommentsHeader.js","containers/Comments/Comment/Comment.js","containers/Comments/AddComment/AddComment.js","containers/Comments/Comments.js","components/RelatedVideos/NextUpVideo/NextUpVideo.js","components/RelatedVideos/RelatedVideos.js","store/reducers/channels.js","store/actions/comment.js","store/reducers/comments.js","containers/Watch/WatchContent/WatchContent.js","containers/Watch/Watch.js","components/VideoList/VideoList.js","containers/Trending/Trending.js","store/actions/search.js","store/reducers/search.js","containers/Search/Search.js","App.js","registerServiceWorker.js","store/reducers/index.js","store/api/youtube-api.js","store/sagas/video.js","store/sagas/index.js","store/sagas/watch.js","store/sagas/comment.js","store/sagas/search.js","index.js","store/configureStore.js"],"names":["module","exports","REQUEST","SUCCESS","FAILURE","createRequestTypes","base","Error","reduce","acc","type","createAction","payload","VIDEO_CATEGORIES","categories","request","success","response","failure","MOST_POPULAR","mostPopular","amount","loadDescription","nextPageToken","MOST_POPULAR_BY_CATEGORY","mostPopularByCategory","SideBarItem","React","Component","render","highlight","this","shouldBeHighlighted","to","pathname","props","path","Menu","Item","className","join","Icon","size","name","icon","label","location","includes","withRouter","SideBarHeader","heading","title","toUpperCase","Header","Subscription","rightElement","broadcasting","amountNewVideos","Image","src","avatar","Subscriptions","Fragment","Divider","SideBarFooter","SideBar","borderless","vertical","stackable","fixed","VideoGridHeader","UNITS","getShortNumberString","number","digits","some","element","index","lowerBound","Math","pow","i","length","decimal","toFixed","toString","objMap","numbers","datePattern","timePattern","pattern","RegExp","getVideoDurationString","iso8601DurationString","days","hours","minutes","seconds","match","slice","prev","next","idx","parseFloat","secondsString","minutesString","accumulatedHours","padStart","TimeAgo","locale","en","timeAgo","VideoPreview","video","videoDuration","contentDetails","duration","viewAndTimeString","getFormattedViewAndTime","horizontal","expanded","description","snippet","search","thumbnails","medium","url","channelTitle","publicationDate","Date","publishedAt","statistics","viewCount","viewCountShort","format","VideoGrid","videos","gridItems","map","key","id","divider","hideDivider","WATCH_DETAILS","details","videoId","channelId","VIDEO_DETAILS","videoDetails","getSearchParam","URLSearchParams","get","initialState","byId","byCategory","related","reduceFetchMostPopularVideos","prevState","videoMap","items","accumulator","Object","keys","hasOwnProperty","totalResults","pageInfo","reduceFetchVideoCategories","category","reduceFetchMostPopularVideosByCategory","responses","byCategoryMap","forEach","status","categoryId","push","groupVideosByIdAndCategory","result","reduceWatchDetails","find","r","kind","relatedEntry","relatedVideosResponse","relatedVideoIds","reduceRelatedVideosRequest","reduceVideoDetails","parsedVideos","filter","getMostPopular","state","getMostPopularVideos","createSelector","videosById","getVideoCategoryIds","getVideosByCategory","videosByCategory","videoIds","videoCategoriesLoaded","videosByCategoryLoaded","getVideoById","getRelatedVideos","getChannelId","getAmountComments","commentCount","allMostPopularVideosLoaded","getMostPopularVideosNextPageToken","InfiniteScroll","children","onEnter","bottomReachedCallback","Loader","active","showLoader","inline","HomeContent","trendingVideos","getTrendingVideos","categoryGrids","getVideoGridsForCategories","mostPopularVideos","categoryTitles","categoryTitle","connect","youtubeLibraryLoaded","bind","libraryLoaded","getYoutubeLibraryLoaded","api","Home","constructor","super","fetchVideosByCategory","categoryIndex","shouldShowLoader","componentDidMount","fetchCategoriesAndMostPopularVideos","componentDidUpdate","prevProps","videoCategories","categoryStartIndex","fetchMostPopularVideosByCategory","setState","fetchMostPopularVideos","fetchVideoCategories","dispatch","videoActions","bindActionCreators","HeaderNav","onInputChange","event","query","target","value","onSubmit","escapedSearchQuery","encodeURI","history","header","logo","Form","Field","Input","placeholder","action","onChange","position","ScrollToTop","window","scrollTo","AppLayout","Video","embedUrl","frameBorder","allow","allowFullScreen","Rating","rating","likeCount","dislikeCount","amountLikes","amountDislikes","percentagePositiveRatings","Progress","percent","VideoMetadata","Number","toLocaleString","Button","basic","labelPosition","VideoInfoBox","onToggleCollapseButtonClick","collapsed","channel","descriptionParagraphs","getDescriptionParagraphs","descriptionTextClass","buttonTitle","getConfig","publishedAtString","iso8601DateString","parse","toDateString","buttonText","getSubscriberButtonText","channelThumbnail","circular","color","compact","onClick","videoDescription","split","paragraph","subscriberCount","CommentsHeader","amountComments","Comment","comment","topLevelComment","authorProfileImageUrl","authorDisplayName","textOriginal","AddComment","TextArea","control","autoHeight","Comments","comments","NextUpVideo","Checkbox","toggle","defaultChecked","RelatedVideos","nextUpVideo","relatedVideosPreviews","relatedVideo","channelResponse","channels","channelEntry","getChannel","COMMENT_THREAD","thread","byVideo","reduceCommentThread","res","newComments","item","commentIds","ids","byVideoComment","getCommentsForVideo","allComments","commentId","getCommentNextPageToken","WatchContent","relatedVideos","Watch","fetchMoreComments","fetchCommentThread","getVideoId","fetchWatchContent","fetchWatchDetails","watchActions","commentActions","VideoList","videoPreviews","getVideoPreviews","Trending","fetchMoreVideos","fetchTrendingVideos","loaderActive","SEARCH_FOR_VIDEOS","forVideos","searchQuery","reduceSearchForVideos","searchResults","results","concat","getSearchResults","getSearchNextPageToken","Search","searchForVideos","getSearchQuery","youtubeApiLoaded","searchActions","App","component","loadYoutubeApi","script","document","createElement","onload","gapi","load","client","setApiKey","body","appendChild","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","combineReducers","buildMostPopularVideosRequest","videoCategoryId","fields","buildApiRequest","part","chart","maxResults","regionCode","pageToken","buildVideoDetailRequest","buildChannelRequest","buildCommentThreadRequest","buildSearchRequest","q","buildRelatedVideosRequest","amountRelatedVideos","relatedToVideoId","requestMethod","params","properties","p","removeEmptyParams","resource","normalizedProps","substr","adjustedName","replace","prop","propArray","ref","pa","createResource","fetchEntity","requests","wrapper","fn","args","ignoreErrorCallback","ignoreErrors","call","all","put","watchMostPopularVideos","take","fork","watchVideoCategories","takeEvery","watchMostPopularVideosByCategory","fetchVideoDetails","shouldFetchChannelInfo","relatedVideoId","watchWatchDetails","watchCommentThread","watchSearchForVideos","entity","store","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","run","rootSaga","configureStore","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4524a8c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e5520ae2.jpg\";","export const REQUEST = 'REQUEST';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport function createRequestTypes(base) {\n  if (!base) {\n    throw new Error('cannot create request type with base = \\'\\' or base = null');\n  }\n  return [REQUEST, SUCCESS, FAILURE].reduce((acc, type) => {\n    acc[type] = `${base}_${type}`;\n    return acc;\n  }, {});\n}\n\nexport function createAction(type, payload = {}) {\n  return {\n    type,\n    ...payload,\n  };\n}","import {createAction, createRequestTypes, REQUEST, SUCCESS, FAILURE} from './index';\n\nexport const VIDEO_CATEGORIES = createRequestTypes('VIDEO_CATEGORIES');\nexport const categories = {\n  request: () => createAction(VIDEO_CATEGORIES[REQUEST]),\n  success: (response) => createAction(VIDEO_CATEGORIES[SUCCESS], {response}),\n  failure: (response) => createAction(VIDEO_CATEGORIES[FAILURE], {response}),\n};\n\nexport const MOST_POPULAR = createRequestTypes('MOST_POPULAR');\nexport const mostPopular = {\n  request: (amount, loadDescription, nextPageToken) => createAction(MOST_POPULAR[REQUEST], {amount, loadDescription, nextPageToken}),\n  success: (response) => createAction(MOST_POPULAR[SUCCESS], {response}),\n  failure: (response) => createAction(MOST_POPULAR[FAILURE], {response}),\n};\n\nexport const MOST_POPULAR_BY_CATEGORY = createRequestTypes('MOST_POPULAR_BY_CATEGORY');\nexport const mostPopularByCategory = {\n  request: (categories) => createAction(MOST_POPULAR_BY_CATEGORY[REQUEST], {categories}),\n  success: (response, categories) => createAction(MOST_POPULAR_BY_CATEGORY[SUCCESS], {response, categories}),\n  failure: (response) => createAction(MOST_POPULAR_BY_CATEGORY[FAILURE], response),\n};\n","import React from 'react';\nimport {Icon, Menu} from \"semantic-ui-react\";\nimport './SideBarItem.scss';\nimport {Link, withRouter} from 'react-router-dom';\n\nexport class SideBarItem extends React.Component {\n  render() {\n    // React will ignore custom boolean attributes, therefore we pass a string\n    // we use this attribute in our SCSS for styling\n    const highlight = this.shouldBeHighlighted() ? 'highlight-item' : null;\n    return (\n      <Link to={{pathname: this.props.path}}>\n        <Menu.Item className={['sidebar-item', highlight].join(' ')}>\n          <div className='sidebar-item-alignment-container'>\n            <span><Icon size='large' name={this.props.icon}/> </span>\n            <span>{this.props.label}</span>\n          </div>\n        </Menu.Item>\n      </Link>\n    );\n  }\n\n  shouldBeHighlighted() {\n    const {pathname} = this.props.location;\n    if (this.props.path === '/') {\n      return pathname === this.props.path;\n    }\n    return pathname.includes(this.props.path);\n  }\n}\n\nexport default withRouter(SideBarItem);","import React from 'react';\nimport {Menu} from 'semantic-ui-react';\nimport './SideBarHeader.scss';\n\nexport function SideBarHeader(props) {\n  const heading = props.title ? props.title.toUpperCase() : '';\n  return (\n    <Menu.Item>\n      <Menu.Header className='side-bar-header'>{heading}</Menu.Header>\n    </Menu.Item>\n  );\n}","import React from 'react';\nimport {Icon, Image, Menu} from \"semantic-ui-react\";\nimport './Subscription.scss';\n\nexport function Subscription(props) {\n\n  let rightElement = null;\n  const {broadcasting, amountNewVideos} = props;\n  if (broadcasting) {\n    rightElement = <Icon name='signal'/>;\n  } else if (amountNewVideos) {\n    rightElement = <span className='new-videos-count'>{amountNewVideos}</span>;\n  }\n\n  return (\n    <Menu.Item>\n      <div className='subscription'>\n        <div>\n          <Image src='https://via.placeholder.com/28x28' avatar/>\n          <span>{props.label}</span>\n        </div>\n        {rightElement}\n      </div>\n    </Menu.Item>\n  );\n}","import React from 'react';\nimport {Subscription} from \"./Subscription/Subscription\";\nimport {Divider} from \"semantic-ui-react\";\nimport {SideBarHeader} from '../SideBarHeader/SideBarHeader';\n\nexport class Subscriptions extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <SideBarHeader title='Subscriptions'/>\n        <Subscription label='MusicChannel' broadcasting/>\n        <Subscription label='Coursea' amountNewVideos={10}/>\n        <Subscription label='TEDx Talks' amountNewVideos={23}/>\n        <Subscription label='Stanford iOS' amountNewVideos={4}/>\n        <Subscription label='Udacity' amountNewVideos={114}/>\n        <Divider/>\n      </React.Fragment>\n    );\n  }\n}","import React from 'react';\nimport './SideBarFooter.scss'\n\nexport function SideBarFooter() {\n  return (\n    <React.Fragment>\n      <div className='footer-block'>\n        <div>About Press Copyright</div>\n        <div>Creators Advertise</div>\n        <div>Developers +MyTube</div>\n        <div>Legal</div>\n      </div>\n      <div className='footer-block'>\n        <div>Terms Privacy</div>\n        <div>Policy & Safety</div>\n        <div>Test new features</div>\n      </div>\n      <div className='footer-block'>\n        <div>All prices include VAT</div>\n      </div>\n      <div className='footer-block'>\n        <div>© Productioncoder.com - A Youtube clone for educational purposes under fair use.</div>\n      </div>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport SideBarItem from './SideBarItem/SideBarItem';\nimport {Menu, Divider} from 'semantic-ui-react';\nimport './SideBar.scss';\nimport {SideBarHeader} from './SideBarHeader/SideBarHeader';\nimport {Subscriptions} from './Subscriptions/Subscriptions';\nimport {SideBarFooter} from './SideBarFooter/SideBarFooter';\n\nexport class SideBar extends React.Component {\n  render() {\n    return (\n      <Menu borderless vertical stackable fixed='left' className='side-nav'>\n        <SideBarItem path='/' label='Home' icon='home'/>\n        <SideBarItem path='/feed/trending' label='Trending' icon='fire'/>\n        <SideBarItem label='Followers' icon='spy'/>\n        <Divider/>\n        <SideBarHeader title='Library'/>\n        <SideBarItem label='History' icon='history'/>\n        <SideBarItem label='Watch later' icon='clock'/>\n        <SideBarItem label='Liked videos' icon='thumbs up'/>\n        <Divider/>\n        <Subscriptions/>\n        <SideBarHeader title='More from Youtube'/>\n        <SideBarItem label='Movies and Shows' icon='film'/>\n        <Divider/>\n        <SideBarItem label='Report history' icon='flag'/>\n        <SideBarItem label='Help' icon='help circle'/>\n        <SideBarItem label='Send feedback' icon='comment'/>\n        <Divider/>\n        <SideBarFooter/>\n      </Menu>\n    );\n  }\n}","import React from 'react';\nimport './VideoGridHeader.scss';\n\nexport function VideoGridHeader(props) {\n  return (\n    <div className='video-grid-header'>\n      <span className='title'>{props.title}</span>\n    </div>\n  );\n}","const UNITS = ['K', 'M', 'B', 'T'];\n\n// https://stackoverflow.com/a/28608086/2328833\nexport function getShortNumberString(number) {\n  const shouldShowDecimalPlace = UNITS.some((element, index) => {\n    const lowerBound = Math.pow(1000, index + 1);\n    const upperBound = lowerBound + lowerBound * 10;\n    return  number > lowerBound && number < upperBound\n  });\n  const digits = shouldShowDecimalPlace ? 1 : 0;\n  for (let i = UNITS.length - 1; i >= 0; i--) {\n    const decimal = Math.pow(1000, i + 1);\n\n    if (number >= decimal) {\n      return (number / decimal).toFixed(digits) + UNITS[i];\n    }\n  }\n  return number.toString();\n}","const objMap = ['years', 'months','days', 'hours', 'minutes', 'seconds'];\nconst numbers = '\\\\d+(?:[\\\\.,]\\\\d{0,3})?';\nconst datePattern = `(${numbers}Y)?(${numbers}M)?(${numbers}D)?`;\nconst timePattern = `T(${numbers}H)?(${numbers}M)?(${numbers}S)?`;\nconst pattern = new RegExp(`P(?:${datePattern}(?:${timePattern})?)`);\n\nexport function parseISO8601TimePattern(durationString) {\n  // https://github.com/tolu/ISO8601-duration/blob/master/src/index.js\n  return durationString.match(pattern).slice(1).reduce((prev, next, idx) => {\n    prev[objMap[idx]] = parseFloat(next) || 0;\n    return prev\n  }, {});\n}\n\nexport function getPublishedAtDateString(iso8601DateString) {\n  if (!iso8601DateString) {\n    return '';\n  }\n  const date = new Date(Date.parse(iso8601DateString));\n  return date.toDateString();\n}\n\nexport function getVideoDurationString(iso8601DurationString) {\n  if (!iso8601DurationString || iso8601DurationString === '') {\n    return '';\n  }\n\n  // new Date(Date.parse(...)) doesn't work here\n  // therefore we are using our regex approach\n  let {days, hours, minutes, seconds} = parseISO8601TimePattern(iso8601DurationString);\n\n  let secondsString = seconds.toString();\n  let minutesString = minutes.toString();\n  let accumulatedHours = days * 24 + hours;\n\n  if (seconds < 10) {\n    secondsString = seconds.toString().padStart(2, '0');\n  }\n  if (minutes < 10 && hours !== 0) {\n    minutesString = minutesString.toString().padStart(2, '0');\n  }\n  if (!accumulatedHours) {\n    return [minutesString, secondsString].join(':');\n  } else {\n    return [accumulatedHours, minutesString, secondsString].join(':');\n  }\n}\n\n\n\n\n","import React from 'react';\nimport {Image} from 'semantic-ui-react';\nimport './VideoPreview.scss';\n\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nimport {getShortNumberString} from '../../services/number/number-format';\nimport {getVideoDurationString} from '../../services/date/date-format';\nimport {Link} from 'react-router-dom';\n\nTimeAgo.locale(en);\nconst timeAgo = new TimeAgo('en-US');\n\nexport class VideoPreview extends React.Component {\n  render() {\n    const {video} = this.props;\n    if (!video) {\n      return <div/>;\n    }\n\n    const duration = video.contentDetails ? video.contentDetails.duration : null;\n    const videoDuration = getVideoDurationString(duration);\n    const viewAndTimeString = VideoPreview.getFormattedViewAndTime(video);\n    const horizontal = this.props.horizontal ? 'horizontal' : null;\n    const expanded = this.props.expanded ? 'expanded' : null;\n    const description = this.props.expanded ? video.snippet.description : null;\n\n    return (\n      <Link to={{pathname: this.props.pathname, search: this.props.search}}>\n        <div className={['video-preview', horizontal, expanded].join(' ')}>\n          <div className='image-container'>\n            <Image src={video.snippet.thumbnails.medium.url}/>\n            <div className='time-label'>\n              <span>{videoDuration}</span>\n            </div>\n          </div>\n\n          <div className='video-info'>\n            <div className={['semi-bold', 'show-max-two-lines', expanded].join(' ')}>{video.snippet.title}</div>\n            <div className='video-preview-metadata-container'>\n              <div className='channel-title'>{video.snippet.channelTitle}</div>\n              <div className='view-and-time'>{viewAndTimeString}</div>\n              <div className='show-max-two-lines'>{description}</div>\n            </div>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n\n  static getFormattedViewAndTime(video) {\n    const publicationDate = new Date(video.snippet.publishedAt);\n    const viewCount = video.statistics ? video.statistics.viewCount : null;\n    if(viewCount) {\n      const viewCountShort = getShortNumberString(video.statistics.viewCount);\n      return `${viewCountShort} views • ${timeAgo.format(publicationDate)}`;\n    }\n    return '';\n  }\n}","import React from 'react';\nimport './VideoGrid.scss';\nimport {VideoGridHeader} from \"./VideoGridHeader/VideoGridHeader\";\nimport {Divider} from \"semantic-ui-react\";\nimport {VideoPreview} from '../VideoPreview/VideoPreview';\n\nexport function VideoGrid(props) {\n  if (!props.videos || !props.videos.length) {\n    return <div/>;\n  }\n  const gridItems = props.videos.map(video => {\n    return (<VideoPreview video={video}\n                          key={video.id}\n                          pathname='/watch'\n                          search={`?v=${video.id}`}/>\n    );\n  });\n\n  const divider = props.hideDivider ? null : <Divider/>;\n  return (\n    <React.Fragment>\n      <VideoGridHeader title={props.title}/>\n      <div className='video-grid'>\n        {gridItems}\n      </div>\n      {divider}\n    </React.Fragment>\n  );\n}","export const VIDEO_LIST_RESPONSE = 'youtube#videoListResponse';\nexport const CHANNEL_LIST_RESPONSE = 'youtube#channelListResponse';\nexport const SEARCH_LIST_RESPONSE = 'youtube#searchListResponse';\nexport const COMMENT_THREAD_LIST_RESPONSE = 'youtube#commentThreadListResponse';","import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\n\nexport const WATCH_DETAILS = createRequestTypes('WATCH_DETAILS');\nexport const details = {\n  request: (videoId, channelId) => createAction(WATCH_DETAILS[REQUEST], {videoId, channelId}),\n  success: (response, videoId) => createAction(WATCH_DETAILS[SUCCESS], {response, videoId}),\n  failure: (response) => createAction(WATCH_DETAILS[FAILURE], {response}),\n};\n\nexport const VIDEO_DETAILS = createRequestTypes('VIDEO_DETAILS');\nexport const videoDetails = {\n  request: () => {\n    throw Error('not implemented');\n  },\n  success: (response) => createAction(VIDEO_DETAILS[SUCCESS], {response}),\n  failure: (response) => createAction(VIDEO_DETAILS[FAILURE], {response}),\n};","export const getSearchParam = (location, name) => {\n  if (!location || !location.search) {\n    return null;\n  }\n  const searchParams = new URLSearchParams(location.search);\n  return searchParams.get(name);\n};","import {MOST_POPULAR, MOST_POPULAR_BY_CATEGORY, VIDEO_CATEGORIES} from '../actions/video';\nimport {SUCCESS} from '../actions';\nimport {createSelector} from 'reselect';\nimport {SEARCH_LIST_RESPONSE, VIDEO_LIST_RESPONSE} from '../api/youtube-api-response-types';\nimport {VIDEO_DETAILS, WATCH_DETAILS} from '../actions/watch';\nimport {getSearchParam} from '../../services/url';\n\nexport const initialState = {\n  byId: {},\n  mostPopular: {},\n  categories: {},\n  byCategory: {},\n  related: {},\n};\nexport default function videos(state = initialState, action) {\n  switch (action.type) {\n    case MOST_POPULAR[SUCCESS]:\n      return reduceFetchMostPopularVideos(action.response, state);\n    case VIDEO_CATEGORIES[SUCCESS]:\n      return reduceFetchVideoCategories(action.response, state);\n    case MOST_POPULAR_BY_CATEGORY[SUCCESS]:\n      return reduceFetchMostPopularVideosByCategory(action.response, action.categories, state);\n    case WATCH_DETAILS[SUCCESS]:\n      return reduceWatchDetails(action.response, state);\n    case VIDEO_DETAILS[SUCCESS]:\n      return reduceVideoDetails(action.response, state);\n    default:\n      return state;\n  }\n}\n\nfunction reduceFetchMostPopularVideos(response, prevState) {\n  const videoMap = response.items.reduce((accumulator, video) => {\n    accumulator[video.id] = video;\n    return accumulator;\n  }, {});\n\n  let items = Object.keys(videoMap);\n  if (response.hasOwnProperty('prevPageToken') && prevState.mostPopular) {\n    items = [...prevState.mostPopular.items, ...items];\n  }\n\n  const mostPopular = {\n    totalResults: response.pageInfo.totalResults,\n    nextPageToken: response.nextPageToken,\n    items,\n  };\n\n  return {\n    ...prevState,\n    mostPopular,\n    byId: {...prevState.byId, ...videoMap},\n  };\n}\n\nfunction reduceFetchVideoCategories(response, prevState) {\n  const categoryMapping = response.items.reduce((accumulator, category) => {\n    accumulator[category.id] = category.snippet.title;\n    return accumulator;\n  }, {});\n  return {\n    ...prevState,\n    categories: categoryMapping,\n  };\n}\n\nfunction reduceFetchMostPopularVideosByCategory(responses, categories, prevState) {\n  let videoMap = {};\n  let byCategoryMap = {};\n\n  responses.forEach((response, index) => {\n    // ignore answer if there was an error\n    if (response.status === 400) return;\n\n    const categoryId = categories[index];\n    const {byId, byCategory} = groupVideosByIdAndCategory(response.result);\n    videoMap = {...videoMap, ...byId};\n    byCategoryMap[categoryId] = byCategory;\n  });\n\n  // compute new state\n  return {\n    ...prevState,\n    byId: {...prevState.byId, ...videoMap},\n    byCategory: {...prevState.byCategory, ...byCategoryMap},\n  };\n}\n\nfunction groupVideosByIdAndCategory(response) {\n  const videos = response.items;\n  const byId = {};\n  const byCategory = {\n    totalResults: response.pageInfo.totalResults,\n    nextPageToken: response.nextPageToken,\n    items: [],\n  };\n\n  videos.forEach((video) => {\n    byId[video.id] = video;\n\n    const items = byCategory.items;\n    if(items && items) {\n      items.push(video.id);\n    } else {\n      byCategory.items = [video.id];\n    }\n  });\n\n  return {byId, byCategory};\n}\n\nfunction reduceWatchDetails(responses, prevState) {\n  const videoDetailResponse = responses.find(r => r.result.kind === VIDEO_LIST_RESPONSE);\n  // we know that items will only have one element\n  // because we explicitly asked for a video with a specific id\n  const video = videoDetailResponse.result.items[0];\n  const relatedEntry = reduceRelatedVideosRequest(responses);\n\n  return {\n    ...prevState,\n    byId: {\n      ...prevState.byId,\n      [video.id]: video\n    },\n    related: {\n      ...prevState.related,\n      [video.id]: relatedEntry\n    }\n  };\n}\n\nfunction reduceRelatedVideosRequest(responses) {\n  const relatedVideosResponse = responses.find(r => r.result.kind === SEARCH_LIST_RESPONSE);\n  const {pageInfo, items, nextPageToken} = relatedVideosResponse.result;\n  const relatedVideoIds = items.map(video => video.id.videoId);\n\n  return {\n    totalResults: pageInfo.totalResults,\n    nextPageToken,\n    items: relatedVideoIds\n  };\n}\n\nfunction reduceVideoDetails(responses, prevState) {\n  const videoResponses = responses.filter(response => response.result.kind === VIDEO_LIST_RESPONSE);\n  const parsedVideos = videoResponses.reduce((videoMap, response) => {\n    // we're explicitly asking for a video with a particular id\n    // so the response set must either contain 0 items (if a video with the id does not exist)\n    // or at most one item (i.e. the channel we've been asking for)\n    const video = response.result.items ? response.result.items[0] : null;\n    if (!video) {\n      return videoMap;\n    }\n    videoMap[video.id] = video;\n    return videoMap;\n  }, {});\n\n  return {\n    ...prevState,\n    byId: {...prevState.byId, ...parsedVideos},\n  };\n}\n\n/* function reduceVideoDetails(responses) {\n  const videoResponses = responses.filter(response => response.result.kind === VIDEO_LIST_RESPONSE);\n  return videoResponses.reduce((accumulator, response) => {\n    response.result.items.forEach(video => {\n      accumulator[video.id] = video;\n    });\n    return accumulator;\n  }, {});\n}\n\nfunction reduceRelatedVideos(responses, videoIds) {\n  const videoResponses = responses.filter(response => response.result.kind === SEARCH_LIST_RESPONSE);\n  return videoResponses.reduce((accumulator, response, index) => {\n    const relatedIds = response.result.items.map(video => video.id.videoId);\n    accumulator[videoIds[index]] = {\n      totalResults: response.result.pageInfo.totalResults,\n      nextPageToken: response.result.nextPageToken,\n      items: relatedIds\n    };\n    return accumulator;\n  }, {});\n} */\n\n\n/*\n*   Selectors\n* */\nconst getMostPopular = (state) => state.videos.mostPopular;\nexport const getMostPopularVideos = createSelector(\n  (state) => state.videos.byId,\n  getMostPopular,\n  (videosById, mostPopular) => {\n    if (!mostPopular || !mostPopular.items) {\n      return [];\n    }\n    return mostPopular.items.map(videoId => videosById[videoId]);\n  }\n);\nexport const getVideoCategoryIds = createSelector(\n  state => state.videos.categories,\n  (categories) => {\n    return Object.keys(categories || {});\n  }\n);\n\nexport const getVideosByCategory = createSelector(\n  state => state.videos.byCategory,\n  state => state.videos.byId,\n  state => state.videos.categories,\n  (videosByCategory, videosById, categories) => {\n    return Object.keys(videosByCategory || {}).reduce((accumulator, categoryId) => {\n      const videoIds = videosByCategory[categoryId].items;\n      const categoryTitle = categories[categoryId];\n      accumulator[categoryTitle] = videoIds.map(videoId => videosById[videoId]);\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const videoCategoriesLoaded = createSelector(\n  state => state.videos.categories,\n  (categories) => {\n    return Object.keys(categories || {}).length !== 0;\n  }\n);\n\nexport const videosByCategoryLoaded = createSelector(\n  state => state.videos.byCategory,\n  (videosByCategory) => {\n    return Object.keys(videosByCategory || {}).length;\n  }\n);\n\nexport const getVideoById = (state, videoId) => {\n  return state.videos.byId[videoId];\n};\nconst getRelatedVideoIds = (state, videoId) => {\n  const related = state.videos.related[videoId];\n  return related ? related.items : [];\n};\nexport const getRelatedVideos = createSelector(\n  getRelatedVideoIds,\n  state => state.videos.byId,\n  (relatedVideoIds, videos) => {\n    if (relatedVideoIds) {\n      // filter kicks out null values we might have\n      return relatedVideoIds.map(videoId => videos[videoId]).filter(video => video);\n    }\n    return [];\n  });\n\nexport const getChannelId = (state, location, name) => {\n  const videoId = getSearchParam(location, name);\n  const video = state.videos.byId[videoId];\n  if (video) {\n    return video.snippet.channelId;\n  }\n  return null;\n};\n\nexport const getAmountComments = createSelector(\n  getVideoById,\n  (video) => {\n    if (video) {\n      return video.statistics.commentCount;\n    }\n    return 0;\n  });\n\nexport const allMostPopularVideosLoaded = createSelector(\n  [getMostPopular],\n  (mostPopular) => {\n    const amountFetchedItems = mostPopular.items ? mostPopular.items.length : 0;\n    return amountFetchedItems === mostPopular.totalResults;\n  }\n);\n\nexport const getMostPopularVideosNextPageToken = createSelector(\n  [getMostPopular],\n  (mostPopular) => {\n    return mostPopular.nextPageToken;\n  }\n);\n\n","import React from 'react';\nimport {Waypoint} from 'react-waypoint';\nimport {Loader} from 'semantic-ui-react';\nimport './InfiniteScroll.scss';\n\nexport function InfiniteScroll(props) {\n  return (\n    <React.Fragment>\n      {props.children}\n      <Waypoint onEnter={props.bottomReachedCallback}>\n        <div className='loader-container'>\n          <Loader active={props.showLoader} inline='centered' />\n        </div>\n      </Waypoint>\n    </React.Fragment>\n  );\n}","import {VideoGrid} from '../../../components/VideoGrid/VideoGrid';\nimport React from 'react';\nimport './HomeContent.scss';\nimport {getMostPopularVideos, getVideosByCategory} from '../../../store/reducers/videos';\nimport {connect} from 'react-redux';\nimport {InfiniteScroll} from '../../../components/InfiniteScroll/InfiniteScroll';\n\nconst AMOUNT_TRENDING_VIDEOS = 12;\n\nexport class HomeContent extends React.Component {\n  render() {\n    const trendingVideos = this.getTrendingVideos();\n    const categoryGrids = this.getVideoGridsForCategories();\n\n    return (\n      <div className='home-content'>\n        <div className=\"responsive-video-grid-container\">\n          <InfiniteScroll bottomReachedCallback={this.props.bottomReachedCallback} showLoader={this.props.showLoader}>\n            <VideoGrid title='Trending' videos={trendingVideos}/>\n            {categoryGrids}\n          </InfiniteScroll>\n        </div>\n      </div>\n    );\n  }\n\n  getTrendingVideos() {\n    return this.props.mostPopularVideos.slice(0, AMOUNT_TRENDING_VIDEOS);\n  }\n\n  getVideoGridsForCategories() {\n    const categoryTitles = Object.keys(this.props.videosByCategory || {});\n    return categoryTitles.map((categoryTitle,index) => {\n      const videos = this.props.videosByCategory[categoryTitle];\n      // the last video grid element should not have a divider\n      const hideDivider = index === categoryTitles.length - 1;\n      return <VideoGrid title={categoryTitle} videos={videos} key={categoryTitle} hideDivider={hideDivider}/>;\n    });\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    videosByCategory: getVideosByCategory(state),\n    mostPopularVideos: getMostPopularVideos(state),\n  };\n}\nexport default connect(mapStateToProps, null)(HomeContent);","import {createAction} from './index';\n\nexport const YOUTUBE_LIBRARY_LOADED = 'YOUTUBE_LIBRARY_LOADED';\nexport const youtubeLibraryLoaded = createAction.bind(null, YOUTUBE_LIBRARY_LOADED);","import {YOUTUBE_LIBRARY_LOADED} from '../actions/api';\n\nconst initialState = {\n  libraryLoaded: false,\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case YOUTUBE_LIBRARY_LOADED:\n      return {\n        libraryLoaded: true,\n      };\n    default:\n      return state;\n  }\n}\nexport const getYoutubeLibraryLoaded = (state) => state.api.libraryLoaded;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport * as videoActions from \"../../store/actions/video\";\nimport './Home.scss';\nimport {SideBar} from '../SideBar/SideBar';\nimport HomeContent from './HomeContent/HomeContent';\nimport {bindActionCreators} from 'redux';\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\nimport {getVideoCategoryIds, videoCategoriesLoaded, videosByCategoryLoaded} from '../../store/reducers/videos';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryIndex: 0,\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <SideBar/>\n        <HomeContent\n          bottomReachedCallback={this.bottomReachedCallback}\n          showLoader={this.shouldShowLoader()}/>\n      </React.Fragment>\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.youtubeLibraryLoaded) {\n      this.fetchCategoriesAndMostPopularVideos();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\n      this.fetchCategoriesAndMostPopularVideos();\n    } else if (this.props.videoCategories !== prevProps.videoCategories) {\n      this.fetchVideosByCategory();\n    }\n  }\n\n  fetchVideosByCategory() {\n    const categoryStartIndex = this.state.categoryIndex;\n    const categories = this.props.videoCategories.slice(categoryStartIndex, categoryStartIndex + 3);\n    this.props.fetchMostPopularVideosByCategory(categories);\n    this.setState(prevState => {\n      return {\n        categoryIndex: prevState.categoryIndex + 3,\n      };\n    });\n  }\n\n  fetchCategoriesAndMostPopularVideos() {\n    this.props.fetchMostPopularVideos();\n    this.props.fetchVideoCategories();\n  }\n\n  bottomReachedCallback = () => {\n    if (!this.props.videoCategoriesLoaded) {\n      return;\n    }\n    this.fetchVideosByCategory();\n  };\n\n  shouldShowLoader() {\n    if (this.props.videoCategoriesLoaded && this.props.videosByCategoryLoaded) {\n      return this.state.categoryIndex < this.props.videoCategories.length;\n    }\n    return false;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\n    videoCategories: getVideoCategoryIds(state),\n    videoCategoriesLoaded: videoCategoriesLoaded(state),\n    videosByCategoryLoaded: videosByCategoryLoaded(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const fetchMostPopularVideos = videoActions.mostPopular.request;\n  const fetchVideoCategories = videoActions.categories.request;\n  const fetchMostPopularVideosByCategory = videoActions.mostPopularByCategory.request;\n  return bindActionCreators({fetchMostPopularVideos, fetchVideoCategories, fetchMostPopularVideosByCategory}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport {Form, Icon, Image, Input, Menu} from 'semantic-ui-react';\nimport './HeaderNav.scss';\nimport logo from '../../assets/images/logo.jpg';\nimport {Link, withRouter} from 'react-router-dom';\n\nexport class HeaderNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n    };\n  }\n  render() {\n    return (\n      // 1\n      <Menu borderless className='top-menu' fixed='top'>\n        {/* 2 */}\n        <Menu.Item header className='logo'>\n          <Link to='/'><Image src={logo} size='tiny'/></Link>\n        </Menu.Item>\n        {/* 3 */}\n        <Menu.Menu className='nav-container'>\n          <Menu.Item className='search-input'>\n            <Form onSubmit={this.onSubmit}>\n              {/* 4 */}\n              <Form.Field>\n                <Input placeholder='Search'\n                       size='small'\n                       action='Go'\n                       value={this.state.query}\n                       onChange={this.onInputChange}\n                />\n              </Form.Field>\n            </Form>\n          </Menu.Item>\n          {/* 5 */}\n          <Menu.Menu position='right'>\n            <Menu.Item>\n              {/* 6 */}\n              <Icon className='header-icon' name='video camera' size='large'/>\n            </Menu.Item>\n            <Menu.Item>\n              <Icon className='header-icon' name='grid layout' size='large'/>\n            </Menu.Item>\n            <Menu.Item>\n              <Icon className='header-icon' name='chat' size='large'/>\n            </Menu.Item>\n            <Menu.Item>\n              <Icon className='header-icon' name='alarm' size='large'/>\n            </Menu.Item>\n            {/* 7*/}\n            <Menu.Item name='avatar'>\n              <Image src='https://via.placeholder.com/80x80' avatar/>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n  onInputChange = (event) => {\n    this.setState({\n      query: event.target.value,\n    });\n  };\n\n  onSubmit = () => {\n    const escapedSearchQuery = encodeURI(this.state.query);\n    this.props.history.push(`/results?search_query=${escapedSearchQuery}`);\n  };\n}\n\nexport default withRouter(HeaderNav);\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\n\nexport class ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location && window) {\n      window.scrollTo(0, 0);\n    }\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import React from 'react';\nimport './AppLayout.scss';\nimport HeaderNav from '../../containers/HeaderNav/HeaderNav';\nimport ScrollToTop from '../ScrollToTop/ScrollToTop';\n\nexport function AppLayout(props) {\n  return (\n    <ScrollToTop>\n      <div className='app-layout'>\n        <HeaderNav/>\n        {props.children}\n      </div>\n    </ScrollToTop>\n  );\n}","import React from 'react';\nimport './Video.scss';\n\nconst BASE_EMBED_URL = 'https://www.youtube.com/embed/';\n\nexport function Video(props) {\n  if(!props.id) {\n    return null;\n  }\n  //const embedUrl = `${BASE_EMBED_URL}${props.id}?autoplay=1`;\n  const embedUrl = `${BASE_EMBED_URL}${props.id}`;\n  return (\n    <div className='video-container'>\n      <div className=\"video\">\n        <iframe className='video-player' src={embedUrl} frameBorder='0'\n                allow='autoplay; encrypted-media' allowFullScreen title='video' />\n      </div>\n\n    </div>\n  );\n}","import React from 'react';\nimport './Rating.scss';\nimport {Icon, Progress} from \"semantic-ui-react\";\nimport {getShortNumberString} from '../../services/number/number-format';\n\nexport function Rating(props) {\n  let rating = null;\n  let likeCount = props.likeCount !== 0 ? props.likeCount : null;\n  let dislikeCount = null;\n\n  if(props.likeCount && props.dislikeCount) {\n    const amountLikes = parseFloat(props.likeCount);\n    const amountDislikes = parseFloat(props.dislikeCount);\n    const percentagePositiveRatings = 100.0 * (amountLikes / (amountLikes + amountDislikes));\n\n    // Now that we have calculated the percentage, we bring the numbers into a better readable format\n    likeCount = getShortNumberString(amountLikes);\n    dislikeCount = getShortNumberString(amountDislikes);\n    rating = <Progress percent={percentagePositiveRatings} size='tiny'/>;\n  }\n  return (\n    <div className='rating'>\n      <div >\n        <Icon name='thumbs outline up'/>\n        <span>{likeCount}</span>\n      </div>\n      <div >\n        <Icon name='thumbs outline down'/>\n        <span>{dislikeCount}</span>\n      </div>\n      {rating}\n    </div>\n  );\n}","import React from 'react';\nimport {Button, Divider, Icon} from \"semantic-ui-react\";\nimport './VideoMetadata.scss';\nimport {Rating} from '../Rating/Rating';\n\nexport function VideoMetadata(props) {\n  if (!props.video || !props.video.statistics) {\n    return <div/>;\n  }\n  const viewCount = Number(props.video.statistics.viewCount).toLocaleString();\n\n  return (\n    <div className='video-metadata'>\n      <h3>{props.video.snippet.title}</h3>\n      <div className='video-stats'>\n        <span>{viewCount} views</span>\n        <div className='video-actions' >\n          <Rating likeCount={props.video.statistics.likeCount}\n                  dislikeCount={props.video.statistics.dislikeCount}/>\n          <Button basic icon labelPosition='left'>\n            <Icon name='share'/>\n            Share\n          </Button>\n          <Button basic icon>\n            <Icon name='add circle' />\n          </Button>\n          <Button basic icon>\n            <Icon name='ellipsis horizontal' />\n          </Button>\n        </div>\n      </div>\n      <Divider/>\n    </div>\n  );\n}","import React from 'react';\nimport './VideoInfoBox.scss';\nimport {Image, Button, Divider} from 'semantic-ui-react';\nimport Linkify from 'react-linkify';\nimport {getPublishedAtDateString} from '../../services/date/date-format';\nimport {getShortNumberString} from '../../services/number/number-format';\n\nexport class VideoInfoBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: true,\n    };\n  }\n\n  render() {\n    if (!this.props.video || !this.props.channel) {\n      return <div/>;\n    }\n\n    const descriptionParagraphs = this.getDescriptionParagraphs();\n    const {descriptionTextClass, buttonTitle} = this.getConfig();\n    const publishedAtString = getPublishedAtDateString(this.props.video.snippet.publishedAt);\n\n    const {channel} = this.props;\n    const buttonText = this.getSubscriberButtonText();\n    const channelThumbnail = channel.snippet.thumbnails.medium.url;\n    const channelTitle = channel.snippet.title;\n\n    return (\n      <div>\n        <div className='video-info-box'>\n          <Image className='channel-image' src={channelThumbnail} circular/>\n          <div className=\"video-info\">\n            <div className='channel-name'>{channelTitle}</div>\n            <div className='video-publication-date'>{publishedAtString}</div>\n          </div>\n          <Button className='subscribe' color='youtube'>{buttonText}</Button>\n          <div className=\"video-description\">\n            <div className={descriptionTextClass}>\n              {descriptionParagraphs}\n            </div>\n            <Button compact onClick={this.onToggleCollapseButtonClick}>{buttonTitle}</Button>\n          </div>\n        </div>\n        <Divider/>\n      </div>\n    );\n  }\n\n  onToggleCollapseButtonClick = () => {\n    this.setState((prevState) => {\n      return {\n        collapsed: !prevState.collapsed\n      };\n    });\n  };\n\n  getDescriptionParagraphs() {\n    const videoDescription = this.props.video.snippet ? this.props.video.snippet.description : null;\n    if (!videoDescription) {\n      return null;\n    }\n    return videoDescription.split('\\n').map((paragraph, index) => <p key={index}><Linkify>{paragraph}</Linkify></p>);\n  }\n\n  getSubscriberButtonText() {\n    const {channel} = this.props;\n    const parsedSubscriberCount = Number(channel.statistics.subscriberCount);\n    const subscriberCount = getShortNumberString(parsedSubscriberCount);\n    return `Subscribe ${subscriberCount}`;\n  }\n\n  getConfig() {\n    let descriptionTextClass = 'collapsed';\n    let buttonTitle = 'Show More';\n    if (!this.state.collapsed) {\n      descriptionTextClass = 'expanded';\n      buttonTitle = 'Show Less';\n    }\n    return {\n      descriptionTextClass,\n      buttonTitle\n    };\n  }\n}","import React from 'react';\nimport {Button, Icon} from \"semantic-ui-react\";\nimport './CommentsHeader.scss';\n\nexport function CommentsHeader(props) {\n  return (\n    <div className='comments-header'>\n      <h4>{props.amountComments} Comments</h4>\n      <Button basic compact icon labelPosition='left'>\n        <Icon name='align left' />\n        Sort by\n      </Button>\n    </div>\n  );\n}","import React from 'react';\nimport './Comment.scss';\nimport {Button, Image} from \"semantic-ui-react\";\nimport {Rating} from '../../../components/Rating/Rating';\n\nexport function Comment(props) {\n  if (!props.comment) {\n    return <div/>;\n  }\n  const topLevelComment = props.comment.snippet.topLevelComment;\n  const {authorProfileImageUrl, authorDisplayName, textOriginal} = topLevelComment.snippet;\n  const likeCount = topLevelComment.snippet.likeCount;\n\n  return (\n    <div className='comment'>\n      <Image className='user-image' src={authorProfileImageUrl} circular />\n      <div>\n        <div className='user-name'>{authorDisplayName}</div>\n        <span>{textOriginal}</span>\n        <div className='comment-actions'>\n          <Rating likeCount={likeCount}/> <Button size='mini' compact>REPLY</Button>\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './AddComment.scss';\nimport {Form, Image, TextArea} from \"semantic-ui-react\";\n\nexport function AddComment() {\n  return (\n    <div className='add-comment'>\n      <Image className='user-image' src='https://via.placeholder.com/48x48' circular/>\n      <Form>\n        <Form.TextArea control={TextArea} autoHeight placeholder='Add a public comment' />\n      </Form>\n    </div>\n  );\n}","import React from 'react';\nimport {CommentsHeader} from \"./CommentsHeader/CommentsHeader\";\nimport {Comment} from './Comment/Comment';\nimport {AddComment} from './AddComment/AddComment';\n\nexport class Comments extends React.Component {\n  render() {\n    if (!this.props.comments) {\n      return <div/>;\n    }\n\n    const comments = this.props.comments.map((comment) => {\n      return <Comment comment={comment} key={comment.id}/>\n    });\n\n    return(\n      <div>\n        <CommentsHeader amountComments={this.props.amountComments}/>\n        <AddComment key='add-comment'/>\n        {comments}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './NextUpVideo.scss';\nimport {Checkbox, Divider} from \"semantic-ui-react\";\nimport {VideoPreview} from '../../VideoPreview/VideoPreview';\n\nexport function NextUpVideo(props) {\n  return (\n    <React.Fragment>\n      <div className='next-up-container'>\n        <h4>Up next</h4>\n        <div className='up-next-toggle'>\n          <span>Autoplay</span>\n          <Checkbox toggle defaultChecked/>\n        </div>\n      </div>\n      <VideoPreview horizontal={true} video={props.video} pathname='/watch' search={`?v=${props.video.id}`}/>\n      <Divider/>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport {VideoPreview} from '../VideoPreview/VideoPreview';\nimport './RelatedVideos.scss';\nimport {NextUpVideo} from './NextUpVideo/NextUpVideo';\n\nexport function RelatedVideos(props) {\n  if (!props.videos || !props.videos.length) {\n    return <div className='related-videos'/>;\n  }\n\n  // safe because before we check if the array has at least one element\n  const nextUpVideo = props.videos[0];\n  const remainingVideos = props.videos.slice(1);\n\n  const relatedVideosPreviews = remainingVideos.map(relatedVideo => (\n      <VideoPreview video={relatedVideo}\n                    key={relatedVideo.id}\n                    pathname='/watch'\n                    search={`?v=${relatedVideo.id}`}\n                    horizontal={true}/>\n  ));\n\n  return (\n    <div className='related-videos'>\n      <NextUpVideo video={nextUpVideo}/>\n      {relatedVideosPreviews}\n    </div>\n  );\n}","import {VIDEO_DETAILS, WATCH_DETAILS} from '../actions/watch';\nimport {SUCCESS} from '../actions';\nimport {CHANNEL_LIST_RESPONSE} from '../api/youtube-api-response-types';\n\nconst initialState = {\n  byId: {}\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case WATCH_DETAILS[SUCCESS]:\n      return reduceWatchDetails(action.response, state);\n    case VIDEO_DETAILS[SUCCESS]:\n      return reduceVideoDetails(action.response, state);\n    default:\n      return state;\n  }\n}\n\nfunction reduceWatchDetails(responses, prevState) {\n  const channelResponse = responses.find(response => response.result.kind === CHANNEL_LIST_RESPONSE);\n  let channels = {};\n  if (channelResponse && channelResponse.result.items) {\n    // we know that there will only be one item\n    // because we ask for a channel with a specific id\n    const channel = channelResponse.result.items[0];\n    channels[channel.id] = channel;\n  }\n  return {\n    ...prevState,\n    byId: {\n      ...prevState.byId,\n      ...channels\n    }\n  };\n}\n\nfunction reduceVideoDetails(responses, prevState) {\n  const channelResponse = responses.find(response => response.result.kind === CHANNEL_LIST_RESPONSE);\n  let channelEntry = {};\n  if (channelResponse && channelResponse.result.items) {\n    // we're explicitly asking for a channel with a particular id\n    // so the response set must either contain 0 items (if a channel with the specified id does not exist)\n    // or at most one item (i.e. the channel we've been asking for)\n    const channel = channelResponse.result.items[0];\n    channelEntry =  {\n      [channel.id]: channel,\n    }\n  }\n\n  return {\n    ...prevState,\n    byId: {\n      ...prevState.byId,\n      ...channelEntry,\n    }\n  };\n}\n\n/*\n*   Selectors\n* */\nexport const getChannel = (state, channelId) => {\n  if (!channelId) return null;\n  return state.channels.byId[channelId];\n};","import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\n\nexport const COMMENT_THREAD = createRequestTypes('COMMENT_THREAD');\nexport const thread = {\n  request: (videoId, nextPageToken) => createAction(COMMENT_THREAD[REQUEST], {videoId, nextPageToken}),\n  success: (response, videoId) => createAction(COMMENT_THREAD[SUCCESS], {response, videoId}),\n  failure: (response) => createAction(COMMENT_THREAD[FAILURE], {response}),\n};","import {SUCCESS} from '../actions';\nimport {WATCH_DETAILS} from '../actions/watch';\nimport {COMMENT_THREAD_LIST_RESPONSE} from '../api/youtube-api-response-types';\nimport {createSelector} from 'reselect';\nimport {COMMENT_THREAD} from '../actions/comment';\nimport {getSearchParam} from '../../services/url';\n\nconst initialState = {\n  byVideo: {},\n  byId: {},\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case COMMENT_THREAD[SUCCESS]:\n      return reduceCommentThread(action.response, action.videoId, state);\n    case WATCH_DETAILS[SUCCESS]:\n      return reduceWatchDetails(action.response, action.videoId, state);\n    default:\n      return state;\n  }\n}\n\nfunction reduceWatchDetails(responses, videoId, prevState) {\n  const commentThreadResponse = responses.find(res => res.result.kind === COMMENT_THREAD_LIST_RESPONSE);\n  return reduceCommentThread(commentThreadResponse.result, videoId, prevState);\n}\n\nfunction reduceCommentThread(response, videoId, prevState) {\n  if (!response) {\n    return prevState;\n  }\n  const newComments = response.items.reduce((acc, item) => {\n    acc[item.id] = item;\n    return acc;\n  }, {});\n\n  // if we have already fetched some comments for a particular video\n  // we just append the ids for the new comments\n  const prevCommentIds = prevState.byVideo[videoId] ? prevState.byVideo[videoId].ids : [];\n  const commentIds = [...prevCommentIds, ...Object.keys(newComments)];\n\n  const byVideoComment = {\n    nextPageToken: response.nextPageToken,\n    ids: commentIds,\n  };\n\n  return {\n    ...prevState,\n    byId: {\n      ...prevState.byId,\n      ...newComments,\n    },\n    byVideo: {\n      ...prevState.byVideo,\n      [videoId]: byVideoComment,\n    }\n  };\n}\n\n/*\n* Selectors\n */\nconst getCommentIdsForVideo = (state, videoId) => {\n  const comment = state.comments.byVideo[videoId];\n  if (comment) {\n    return comment.ids;\n  }\n  return [];\n};\nexport const getCommentsForVideo = createSelector(\n  getCommentIdsForVideo,\n  state => state.comments.byId,\n  (commentIds, allComments) => {\n    return commentIds.map(commentId => allComments[commentId]);\n  }\n);\n\nconst getComment = (state, location) => {\n  const videoId = getSearchParam(location, 'v');\n  return state.comments.byVideo[videoId];\n};\nexport const getCommentNextPageToken = createSelector(\n  getComment,\n  (comment) => {\n    return comment ? comment.nextPageToken : null;\n  }\n);","import React from 'react';\nimport {Video} from '../../../components/Video/Video';\nimport {VideoMetadata} from '../../../components/VideoMetadata/VideoMetadata';\nimport {VideoInfoBox} from '../../../components/VideoInfoBox/VideoInfoBox';\nimport {Comments} from '../../Comments/Comments';\nimport {RelatedVideos} from '../../../components/RelatedVideos/RelatedVideos';\nimport './WatchContent.scss';\nimport {getAmountComments, getRelatedVideos, getVideoById} from '../../../store/reducers/videos';\nimport {connect} from 'react-redux';\nimport {getChannel} from '../../../store/reducers/channels';\nimport {getCommentsForVideo} from '../../../store/reducers/comments';\nimport {InfiniteScroll} from '../../../components/InfiniteScroll/InfiniteScroll';\n\nclass WatchContent extends React.Component {\n  render() {\n    if (!this.props.videoId) {\n      return <div/>\n    }\n    return (\n      <InfiniteScroll bottomReachedCallback={this.props.bottomReachedCallback} showLoader={this.shouldShowLoader()}>\n        <div className='watch-grid'>\n          <Video className='video' id={this.props.videoId}/>\n          <VideoMetadata className='metadata' video={this.props.video}/>\n          <VideoInfoBox className='video-info-box' video={this.props.video} channel={this.props.channel}/>\n          <RelatedVideos className='related-videos' videos={this.props.relatedVideos}/>\n          <Comments className='comments' comments={this.props.comments}  amountComments={this.props.amountComments}/>\n        </div>\n      </InfiniteScroll>\n    );\n  }\n  shouldShowLoader() {\n    return !!this.props.nextPageToken;\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    relatedVideos: getRelatedVideos(state, props.videoId),\n    video: getVideoById(state, props.videoId),\n    channel: getChannel(state, props.channelId),\n    comments: getCommentsForVideo(state, props.videoId),\n    amountComments: getAmountComments(state, props.videoId)\n  }\n}\n\nexport default connect(mapStateToProps, null)(WatchContent);","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport * as watchActions from '../../store/actions/watch';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\nimport WatchContent from './WatchContent/WatchContent';\nimport {getSearchParam} from '../../services/url';\nimport {getChannelId} from '../../store/reducers/videos';\nimport {getCommentNextPageToken} from '../../store/reducers/comments';\nimport * as commentActions from '../../store/actions/comment';\n\n\nexport class Watch extends React.Component {\n  render() {\n    const videoId = this.getVideoId();\n    return (\n      <WatchContent videoId={videoId} channelId={this.props.channelId} bottomReachedCallback={this.fetchMoreComments}\n                    nextPageToken={this.props.nextPageToken}/>\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.youtubeLibraryLoaded) {\n      this.fetchWatchContent();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\n      this.fetchWatchContent();\n    }\n  }\n\n  getVideoId() {\n    return getSearchParam(this.props.location, 'v');\n  }\n\n  fetchWatchContent() {\n    const videoId = this.getVideoId();\n    if (!videoId) {\n      this.props.history.push('/');\n    }\n    this.props.fetchWatchDetails(videoId, this.props.channelId);\n  }\n\n  fetchMoreComments = () => {\n    if (this.props.nextPageToken) {\n      this.props.fetchCommentThread(this.getVideoId(), this.props.nextPageToken);\n    }\n  };\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\n    channelId: getChannelId(state, props.location, 'v'),\n    nextPageToken: getCommentNextPageToken(state, props.location),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const fetchWatchDetails = watchActions.details.request;\n  const fetchCommentThread = commentActions.thread.request;\n  return bindActionCreators({fetchWatchDetails, fetchCommentThread}, dispatch);\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Watch));","import React from 'react';\nimport {SideBar} from '../../containers/SideBar/SideBar';\nimport {InfiniteScroll} from '../InfiniteScroll/InfiniteScroll';\nimport './VideoList.scss';\nimport {VideoPreview} from '../VideoPreview/VideoPreview';\n\nexport class VideoList extends React.Component {\n  render() {\n    const videoPreviews = this.getVideoPreviews();\n    return (\n      <React.Fragment>\n        <SideBar/>\n        <div className='video-list'>\n          <InfiniteScroll bottomReachedCallback={this.props.bottomReachedCallback} showLoader={this.props.showLoader}>\n            {videoPreviews}\n          </InfiniteScroll>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  getVideoPreviews() {\n    if(!this.props.videos || !this.props.videos.length) {\n      return null;\n    }\n    const firstVideo = this.props.videos[0];\n    if (!firstVideo.snippet.description) {return null}\n\n    return this.props.videos.map(video => (\n      <VideoPreview horizontal={true} expanded={true} video={video} key={video.id} pathname={'/watch'}\n                    search={'?v=' + video.id}/>)\n    );\n  }\n\n}","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport * as videoActions from \"../../store/actions/video\";\nimport {\n  allMostPopularVideosLoaded,\n  getMostPopularVideos,\n  getMostPopularVideosNextPageToken\n} from '../../store/reducers/videos';\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\nimport {VideoList} from '../../components/VideoList/VideoList';\n\nclass Trending extends React.Component {\n  componentDidMount() {\n    this.fetchTrendingVideos();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.youtubeLibraryLoaded !== this.props.youtubeLibraryLoaded) {\n      this.fetchTrendingVideos();\n    }\n  }\n\n  render() {\n    const loaderActive = this.shouldShowLoader();\n\n    return (<VideoList\n      bottomReachedCallback={this.fetchMoreVideos}\n      showLoader={loaderActive}\n      videos={this.props.videos}/>);\n  }\n\n\n  fetchMoreVideos = () => {\n    const {nextPageToken} = this.props;\n    if (this.props.youtubeLibraryLoaded && nextPageToken) {\n      this.props.fetchMostPopularVideos(12, true, nextPageToken);\n    }\n  };\n\n  fetchTrendingVideos() {\n    if (this.props.youtubeLibraryLoaded) {\n      this.props.fetchMostPopularVideos(20, true);\n    }\n  }\n\n  shouldShowLoader() {\n    return !this.props.allMostPopularVideosLoaded;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    videos: getMostPopularVideos(state),\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\n    allMostPopularVideosLoaded: allMostPopularVideosLoaded(state),\n    nextPageToken: getMostPopularVideosNextPageToken(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const fetchMostPopularVideos = videoActions.mostPopular.request;\n  return bindActionCreators({fetchMostPopularVideos}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trending);","import {createAction, createRequestTypes, FAILURE, REQUEST, SUCCESS} from './index';\n\nexport const SEARCH_FOR_VIDEOS = createRequestTypes('SEARCH_FOR_VIDEOS');\nexport const forVideos = {\n  request: (searchQuery, nextPageToken, amount) => createAction(SEARCH_FOR_VIDEOS[REQUEST], {searchQuery, nextPageToken, amount}),\n  success: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[SUCCESS], {response, searchQuery}),\n  failure: (response, searchQuery) => createAction(SEARCH_FOR_VIDEOS[FAILURE],  {response, searchQuery}),\n};","import {SEARCH_FOR_VIDEOS} from '../actions/search';\nimport {REQUEST, SUCCESS} from '../actions';\n\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case SEARCH_FOR_VIDEOS[SUCCESS]:\n      return reduceSearchForVideos(action.response, action.searchQuery, state);\n    case SEARCH_FOR_VIDEOS[REQUEST]:\n      // delete the previous search because otherwise our component flickers and shows the\n      // previous search results before it shows\n      return action.nextPageToken ? state : {};\n    default:\n      return state;\n  }\n}\n\nfunction reduceSearchForVideos(response, searchQuery, prevState) {\n  let searchResults = response.items.map(item => ({...item, id: item.id.videoId}));\n  if (prevState.query === searchQuery) {\n    const prevResults = prevState.results || [];\n    searchResults = prevResults.concat(searchResults);\n  }\n  return {\n    totalResults: response.pageInfo.totalResults,\n    nextPageToken: response.nextPageToken,\n    query: searchQuery,\n    results: searchResults\n  };\n}\n\n/*\n  Selectors\n */\nexport const getSearchResults = (state) => state.search.results;\nexport const getSearchNextPageToken = (state) => state.search.nextPageToken;\n","import React from 'react';\nimport './Search.scss';\nimport {getYoutubeLibraryLoaded} from '../../store/reducers/api';\nimport {getSearchNextPageToken, getSearchResults} from '../../store/reducers/search';\nimport * as searchActions from '../../store/actions/search';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {getSearchParam} from '../../services/url';\nimport {VideoList} from '../../components/VideoList/VideoList';\nimport {withRouter} from 'react-router-dom';\n\nclass Search extends React.Component {\n  render() {\n    return (<VideoList\n      bottomReachedCallback={this.bottomReachedCallback}\n      showLoader={true}\n      videos={this.props.searchResults}/>);\n  }\n\n  getSearchQuery() {\n    return getSearchParam(this.props.location, 'search_query');\n  }\n\n  componentDidMount() {\n    if (!this.getSearchQuery()) {\n      // redirect to home component if search query is not there\n      this.props.history.push('/');\n    }\n    this.searchForVideos();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.youtubeApiLoaded !== this.props.youtubeApiLoaded) {\n      this.searchForVideos();\n    }\n  }\n\n  searchForVideos() {\n    const searchQuery = this.getSearchQuery();\n    if (this.props.youtubeApiLoaded) {\n      this.props.searchForVideos(searchQuery);\n    }\n  }\n\n  bottomReachedCallback = () => {\n    if(this.props.nextPageToken) {\n      this.props.searchForVideos(this.getSearchQuery(), this.props.nextPageToken, 25);\n    }\n  };\n\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const searchForVideos = searchActions.forVideos.request;\n  return bindActionCreators({searchForVideos}, dispatch);\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    youtubeApiLoaded: getYoutubeLibraryLoaded(state),\n    searchResults: getSearchResults(state, props.location.search),\n    nextPageToken: getSearchNextPageToken(state, props.location.search),\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Search));\n\n","import React, {Component} from 'react';\nimport Home from './containers/Home/Home';\nimport {AppLayout} from './components/AppLayout/AppLayout';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport Watch from './containers/Watch/Watch';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {youtubeLibraryLoaded} from './store/actions/api';\nimport Trending from './containers/Trending/Trending';\nimport Search from './containers/Search/Search';\n\nconst API_KEY = \"AIzaSyDV59At-BhS1RRyXLcdo85crpMhoZAcnqM\";\n\nclass App extends Component {\n  render() {\n    return (\n      <AppLayout>\n        <Switch>\n          <Route path=\"/feed/trending\" component={Trending}/>\n          <Route path=\"/results\" render={() => <Search key={this.props.location.key}/>}/>\n          <Route path=\"/watch\" render={() => <Watch key={this.props.location.key}/>}/>\n          <Route path=\"/\" component={Home}/>\n        </Switch>\n      </AppLayout>\n    );\n  }\n  componentDidMount() {\n    this.loadYoutubeApi();\n  }\n\n  loadYoutubeApi() {\n    const script = document.createElement(\"script\");\n    script.src = \"https://apis.google.com/js/client.js\";\n\n    script.onload = () => {\n      window.gapi.load('client', () => {\n        window.gapi.client.setApiKey(API_KEY);\n        window.gapi.client.load('youtube', 'v3', () => {\n          this.props.youtubeLibraryLoaded();\n        });\n      });\n    };\n\n    document.body.appendChild(script);\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({youtubeLibraryLoaded}, dispatch);\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(App));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import apiReducer from './api';\nimport {combineReducers} from 'redux';\nimport videosReducer from './videos'\nimport channelsReducer from './channels';\nimport commentsReducer from './comments';\nimport searchReducer from './search';\n\nexport default combineReducers({\n  api: apiReducer,\n  videos: videosReducer,\n  channels: channelsReducer,\n  comments: commentsReducer,\n  search: searchReducer\n});","export function buildVideoCategoriesRequest() {\n  return buildApiRequest('GET',\n    '/youtube/v3/videoCategories',\n    {\n      'part': 'snippet',\n      'regionCode': 'US'\n    }, null);\n}\n\nexport function buildMostPopularVideosRequest(amount = 12, loadDescription = false, nextPageToken, videoCategoryId = null) {\n  let fields = 'nextPageToken,prevPageToken,items(contentDetails/duration,id,snippet(channelId,channelTitle,publishedAt,thumbnails/medium,title),statistics/viewCount),pageInfo(totalResults)';\n  if (loadDescription) {\n    fields += ',items/snippet/description';\n  }\n  return buildApiRequest('GET',\n    '/youtube/v3/videos',\n    {\n      part: 'snippet,statistics,contentDetails',\n      chart: 'mostPopular',\n      maxResults: amount,\n      regionCode: 'US',\n      pageToken: nextPageToken,\n      fields,\n      videoCategoryId,\n    }, null);\n}\n\nexport function buildVideoDetailRequest(videoId) {\n  return buildApiRequest('GET',\n    '/youtube/v3/videos',\n    {\n      part: 'snippet,statistics,contentDetails',\n      id: videoId,\n      fields: 'kind,items(contentDetails/duration,id,snippet(channelId,channelTitle,description,publishedAt,thumbnails/medium,title),statistics)'\n    }, null);\n}\n\nexport function buildChannelRequest(channelId) {\n  return buildApiRequest('GET',\n    '/youtube/v3/channels',\n    {\n      part: 'snippet,statistics',\n      id: channelId,\n      fields: 'kind,items(id,snippet(description,thumbnails/medium,title),statistics/subscriberCount)'\n    }, null);\n}\n\nexport function buildCommentThreadRequest(videoId, nextPageToken) {\n  return buildApiRequest('GET',\n    '/youtube/v3/commentThreads',\n    {\n      part: 'id,snippet',\n      pageToken: nextPageToken,\n      videoId,\n    }, null);\n}\n\nexport function buildSearchRequest(query, nextPageToken, amount = 12) {\n  return buildApiRequest('GET',\n    '/youtube/v3/search',\n    {\n      part: 'id,snippet',\n      q: query,\n      type: 'video',\n      pageToken: nextPageToken,\n      maxResults: amount,\n    }, null);\n}\n\nexport function buildRelatedVideosRequest(videoId, amountRelatedVideos = 12) {\n  return buildApiRequest('GET',\n    '/youtube/v3/search',\n    {\n      part: 'snippet',\n      type: 'video',\n      maxResults: amountRelatedVideos,\n      relatedToVideoId: videoId,\n    }, null);\n}\n\n/*\n  Util - Youtube API boilerplate code\n */\nexport function buildApiRequest(requestMethod, path, params, properties) {\n  params = removeEmptyParams(params);\n  let request;\n  if (properties) {\n    let resource = createResource(properties);\n    request = window.gapi.client.request({\n      'body': resource,\n      'method': requestMethod,\n      'path': path,\n      'params': params\n    });\n  } else {\n    request = window.gapi.client.request({\n      'method': requestMethod,\n      'path': path,\n      'params': params\n    });\n  }\n  return request;\n}\n\nfunction removeEmptyParams(params) {\n  for (var p in params) {\n    if (!params[p] || params[p] === 'undefined') {\n      delete params[p];\n    }\n  }\n  return params;\n}\n\nfunction createResource(properties) {\n  var resource = {};\n  var normalizedProps = properties;\n  for (var p in properties) {\n    var value = properties[p];\n    if (p && p.substr(-2, 2) === '[]') {\n      var adjustedName = p.replace('[]', '');\n      if (value) {\n        normalizedProps[adjustedName] = value.split(',');\n      }\n      delete normalizedProps[p];\n    }\n  }\n  for (var prop in normalizedProps) {\n    // Leave properties that don't have values out of inserted resource.\n    if (normalizedProps.hasOwnProperty(prop) && normalizedProps[prop]) {\n      var propArray = prop.split('.');\n      var ref = resource;\n      for (var pa = 0; pa < propArray.length; pa++) {\n        var key = propArray[pa];\n        if (pa === propArray.length - 1) {\n          ref[key] = normalizedProps[prop];\n        } else {\n          ref = ref[key] = ref[key] || {};\n        }\n      }\n    }\n  }\n  return resource;\n}","import {fork, take, takeEvery, call, all, put} from 'redux-saga/effects';\nimport * as api from '../api/youtube-api';\nimport * as videoActions from '../actions/video';\nimport {REQUEST} from '../actions';\nimport {fetchEntity, ignoreErrors} from './index';\n\nexport const fetchVideoCategories = fetchEntity.bind(null, api.buildVideoCategoriesRequest, videoActions.categories);\n\n\nexport function* fetchMostPopularVideosByCategory(categories) {\n  const requests = categories.map(categoryId => {\n    const wrapper = ignoreErrors(api.buildMostPopularVideosRequest, 12, false, null, categoryId);\n    return call(wrapper);\n  });\n  try {\n    const response = yield all(requests);\n    yield put(videoActions.mostPopularByCategory.success(response, categories));\n  } catch (error) {\n    yield put(videoActions.mostPopularByCategory.failure(error));\n  }\n}\n\nexport function* fetchMostPopularVideos(amount, loadDescription, nextPageToken) {\n  const request = api.buildMostPopularVideosRequest.bind(null, amount, loadDescription, nextPageToken);\n  yield fetchEntity(request, videoActions.mostPopular);\n}\n\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchMostPopularVideos() {\n  while (true) {\n    const {amount, loadDescription, nextPageToken} = yield take(videoActions.MOST_POPULAR[REQUEST]);\n    yield fork(fetchMostPopularVideos, amount, loadDescription, nextPageToken);\n  }\n}\n\nexport function* watchVideoCategories() {\n  yield takeEvery(videoActions.VIDEO_CATEGORIES[REQUEST], fetchVideoCategories);\n}\nexport function* watchMostPopularVideosByCategory() {\n  while(true) {\n    const {categories} = yield take(videoActions.MOST_POPULAR_BY_CATEGORY[REQUEST]);\n    yield fork(fetchMostPopularVideosByCategory, categories);\n  }\n}","import {all, call, put, fork} from 'redux-saga/effects';\nimport {watchMostPopularVideos, watchMostPopularVideosByCategory, watchVideoCategories} from './video';\nimport {watchWatchDetails} from './watch';\nimport {watchCommentThread} from './comment';\nimport {watchSearchForVideos} from './search';\nexport default function* () {\n  yield all([\n    fork(watchMostPopularVideos),\n    fork(watchVideoCategories),\n    fork(watchMostPopularVideosByCategory),\n    fork(watchWatchDetails),\n    fork(watchCommentThread),\n    fork(watchSearchForVideos)\n  ]);\n}\n\n/*\n* entity must have a success, request and failure method\n* request is a function that returns a promise when called\n* */\nexport function* fetchEntity(request, entity, ...args) {\n  try {\n    const response = yield call(request);\n    // we directly return the result object and throw away the headers and the status text here\n    // if status and headers are needed, then instead of returning response.result, we have to return just response.\n    yield put(entity.success(response.result, ...args));\n  } catch (error) {\n    yield put(entity.failure(error, ...args));\n  }\n}\n\nexport function ignoreErrors(fn, ...args) {\n  return () => {\n    const ignoreErrorCallback = (response) => response;\n    return fn(...args).then(ignoreErrorCallback, ignoreErrorCallback);\n  };\n}","import {fork, take, all, put, call} from 'redux-saga/effects';\nimport * as watchActions from '../actions/watch';\nimport {\n  buildVideoDetailRequest,\n  buildRelatedVideosRequest,\n  buildChannelRequest,\n  buildCommentThreadRequest\n} from '../api/youtube-api';\nimport {REQUEST} from '../actions';\nimport {SEARCH_LIST_RESPONSE, VIDEO_LIST_RESPONSE} from '../api/youtube-api-response-types';\n\nexport function* fetchWatchDetails(videoId, channelId) {\n  let requests = [\n    buildVideoDetailRequest.bind(null, videoId),\n    buildRelatedVideosRequest.bind(null, videoId),\n    buildCommentThreadRequest.bind(null, videoId)\n  ];\n\n  if (channelId) {\n    requests.push(buildChannelRequest.bind(null, channelId));\n  }\n\n  try {\n    const responses = yield all(requests.map(fn => call(fn)));\n    yield put(watchActions.details.success(responses, videoId));\n    yield call (fetchVideoDetails, responses, channelId === null);\n  } catch (error) {\n    yield put(watchActions.details.failure(error));\n  }\n}\n\nfunction* fetchVideoDetails(responses, shouldFetchChannelInfo) {\n  const searchListResponse = responses.find(response => response.result.kind === SEARCH_LIST_RESPONSE);\n  const relatedVideoIds =  searchListResponse.result.items.map(relatedVideo => relatedVideo.id.videoId);\n\n  const requests = relatedVideoIds.map(relatedVideoId => {\n    return buildVideoDetailRequest.bind(null, relatedVideoId);\n  });\n\n  if (shouldFetchChannelInfo) {\n    // we have to extract the video's channel id from the video details response\n    // so we can load additional channel information.\n    // this is only needed, when a user directly accesses .../watch?v=1234\n    // because then we only know the video id\n    const videoDetailResponse = responses.find(response => response.result.kind === VIDEO_LIST_RESPONSE);\n    const videos = videoDetailResponse.result.items;\n    if (videos && videos.length) {\n      requests.push(buildChannelRequest.bind(null, videos[0].snippet.channelId));\n    }\n  }\n\n  try {\n    const responses = yield all(requests.map(fn => call(fn)));\n    yield put(watchActions.videoDetails.success(responses));\n  } catch (error) {\n    yield put(watchActions.videoDetails.failure(error));\n  }\n}\n\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchWatchDetails() {\n  while (true) {\n    const {videoId, channelId} = yield take(watchActions.WATCH_DETAILS[REQUEST]);\n    yield fork(fetchWatchDetails, videoId, channelId);\n  }\n}","import {fork, take} from 'redux-saga/effects';\nimport {REQUEST} from '../actions';\nimport * as commentActions from '../actions/comment'\nimport * as api from '../api/youtube-api';\nimport {fetchEntity} from './index';\n\nexport function* fetchCommentThread(videoId, nextPageToken) {\n  const request = api.buildCommentThreadRequest.bind(null, videoId, nextPageToken);\n  yield fetchEntity(request, commentActions.thread, videoId);\n}\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchCommentThread() {\n  while(true) {\n    const {videoId, nextPageToken} = yield take(commentActions.COMMENT_THREAD[REQUEST]);\n    yield fork(fetchCommentThread, videoId, nextPageToken);\n  }\n}","import * as searchActions from '../actions/search';\nimport {REQUEST} from '../actions';\nimport {fork, take} from 'redux-saga/effects';\nimport * as api from '../api/youtube-api';\nimport {fetchEntity} from './index';\n\nexport function* searchForVideos(searchQuery, nextPageToken, amount) {\n  const request = api.buildSearchRequest.bind(null, searchQuery, nextPageToken, amount);\n  yield fetchEntity(request, searchActions.forVideos, searchQuery);\n}\n\n/******************************************************************************/\n/******************************* WATCHERS *************************************/\n/******************************************************************************/\nexport function* watchSearchForVideos() {\n  while (true) {\n    const {searchQuery, amount, nextPageToken} = yield take(searchActions.SEARCH_FOR_VIDEOS[REQUEST]);\n    yield fork(searchForVideos, searchQuery, nextPageToken, amount);\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport {configureStore} from './store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>, document.getElementById('root'));\nregisterServiceWorker();","import {applyMiddleware, compose, createStore} from 'redux';\nimport reducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\n\nexport function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducer, composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n  ));\n  sagaMiddleware.run(rootSaga);\n  \n  return store;\n}"],"sourceRoot":""}